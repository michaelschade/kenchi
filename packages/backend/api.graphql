### This file was generated by Nexus Schema
### Do not make changes to this file directly


type Admin {
  migrations: [DatabaseMigration!]!
  nonOrgDomains(
    """Returns the elements in the list that come after the specified cursor"""
    after: String

    """Returns the first n elements from the list."""
    first: Int!
  ): DomainConnection
  nonOrgUsers(
    """Returns the elements in the list that come after the specified cursor"""
    after: String

    """Returns the first n elements from the list."""
    first: Int!
  ): UserConnection!
  notificationStats(id: ID!): NotificationStats
  organization(googleDomain: String, id: ID, name: String): Organization
  organizations(
    """Returns the elements in the list that come after the specified cursor"""
    after: String

    """Returns the first n elements from the list."""
    first: Int!
  ): OrganizationConnection!
  pageSnapshots(
    """Returns the elements in the list that come after the specified cursor"""
    after: String

    """Returns the first n elements from the list."""
    first: Int!
  ): PageSnapshotConnection!
  toolRunLogs(
    """Returns the elements in the list that come after the specified cursor"""
    after: String

    """Returns the first n elements from the list."""
    first: Int!
  ): ToolRunLogConnection!
  unprocessedLogs: [UnprocessedLog!]!
  user(id: ID!): User
}

interface AdminNode {
  id: ID!
}

type AuthSession implements Node {
  expiresAt: DateTime!
  id: ID!
  type: AuthTypeEnum!
}

enum AuthTypeEnum {
  loginAs
  user
}

interface BaseUser {
  disabledAt: DateTime
  email: String
  familyName: String
  givenName: String
  id: ID!
  name: String
  organization: Organization!
  picture: String
}

type BaseUserConnection {
  """
  https://facebook.github.io/relay/graphql/connections.htm#sec-Edge-Types
  """
  edges: [BaseUserEdge!]!

  """
  https://facebook.github.io/relay/graphql/connections.htm#sec-undefined.PageInfo
  """
  pageInfo: PageInfo!
}

type BaseUserEdge {
  """https://facebook.github.io/relay/graphql/connections.htm#sec-Cursor"""
  cursor: String!

  """https://facebook.github.io/relay/graphql/connections.htm#sec-Node"""
  node: BaseUser!
}

type BooleanOutput {
  error: KenchiError
  success: Boolean!
}

enum BranchTypeEnum {
  draft
  published
  suggestion
}

input BulkUpdateFiltersInput {
  collectionIds: [String!]
  includeArchived: Boolean
  onlyPublished: Boolean
  staticIds: [String!]
}

type BulkUpdateOutput {
  error: KenchiError
  success: Boolean!
  updatesByType: Json
}

input BulkUpdateReplaceInput {
  from: String!
  to: String!
}

input BulkUpdateUpdatesInput {
  collectionId: ID
  fixMissingChildren: Boolean
  isArchived: Boolean
  lineBreakRemoval: String
  removeIntro: Boolean
  removeOutro: Boolean
  replace: [BulkUpdateReplaceInput!]
}

type Collection implements Node {
  acl: [CollectionAcl!]!
  defaultPermissions: [CollectionPermissionEnum!]!
  description: String!
  icon: String
  id: ID!
  isArchived: Boolean!
  isPrivate: Boolean!
  name: String!
  organization: Organization
  relatedTools(
    """Returns the elements in the list that come after the specified cursor"""
    after: String

    """Returns the first n elements from the list."""
    first: Int!
  ): ToolLatestConnection!
  toolCount: Int!
  toolSuggestions(
    """Returns the elements in the list that come after the specified cursor"""
    after: String

    """Returns the first n elements from the list."""
    first: Int!
  ): ToolLatestConnection
  tools(
    """Returns the elements in the list that come after the specified cursor"""
    after: String

    """Returns the first n elements from the list."""
    first: Int!
    includeArchived: Boolean
    knownCollectionIds: [ID!]
    updatedSince: DateTime
  ): CollectionTools_Connection!
  topUsedTools(
    """Returns the elements in the list that come after the specified cursor"""
    after: String

    """Returns the first n elements from the list."""
    first: Int!
  ): ToolLatestConnection!
  unwrappedPermissions: [String!]!
  workflowCount: Int!
  workflowSuggestions(
    """Returns the elements in the list that come after the specified cursor"""
    after: String

    """Returns the first n elements from the list."""
    first: Int!
  ): WorkflowLatestConnection
  workflows(
    """Returns the elements in the list that come after the specified cursor"""
    after: String

    """Returns the first n elements from the list."""
    first: Int!
    includeArchived: Boolean
    knownCollectionIds: [ID!]
    updatedSince: DateTime
  ): CollectionWorkflows_Connection!
}

type CollectionAcl {
  collection: Collection!
  id: ID!
  permissions: [CollectionPermissionEnum!]!
  user: LimitedUser
  userGroup: UserGroup
}

input CollectionAclInput {
  permissions: [CollectionPermissionEnum!]!
  userGroupId: ID
  userId: ID
}

type CollectionConnection {
  """
  https://facebook.github.io/relay/graphql/connections.htm#sec-Edge-Types
  """
  edges: [CollectionEdge!]!

  """
  https://facebook.github.io/relay/graphql/connections.htm#sec-undefined.PageInfo
  """
  pageInfo: PageInfo!
}

type CollectionEdge {
  """https://facebook.github.io/relay/graphql/connections.htm#sec-Cursor"""
  cursor: String!

  """https://facebook.github.io/relay/graphql/connections.htm#sec-Node"""
  node: Collection!
}

input CollectionInput {
  acl: [CollectionAclInput!]!
  defaultPermissions: [CollectionPermissionEnum!]
  description: String!
  icon: String
  name: String!
}

type CollectionOutput {
  collection: Collection
  error: KenchiError
}

enum CollectionPermissionEnum {
  admin
  publisher
  viewer
}

type CollectionTools_Connection {
  """
  https://facebook.github.io/relay/graphql/connections.htm#sec-Edge-Types
  """
  edges: [ToolLatestEdge!]!

  """
  https://facebook.github.io/relay/graphql/connections.htm#sec-undefined.PageInfo
  """
  pageInfo: PageInfo!
  removed: [String!]!
}

type CollectionWorkflows_Connection {
  """
  https://facebook.github.io/relay/graphql/connections.htm#sec-Edge-Types
  """
  edges: [WorkflowLatestEdge!]!

  """
  https://facebook.github.io/relay/graphql/connections.htm#sec-undefined.PageInfo
  """
  pageInfo: PageInfo!
  removed: [String!]!
}

type CreateOrganizationOutput {
  error: KenchiError
  sharedCollection: Collection
  viewer: Viewer!
}

type DataImport implements Node {
  completedAt: DateTime
  createdAt: DateTime!
  id: ID!
  initialData: Json!
  startedAt: DateTime
  state: Json
  type: DataImportTypeEnum!
  updatedAt: DateTime!
}

type DataImportOutput {
  dataImport: DataImport
  error: KenchiError
}

enum DataImportTypeEnum {
  csv
  intercom
  textExpander
  zendesk
}

type DataSource {
  id: ID!
  isArchived: Boolean!
  name: String!
  organization: Organization!
  outputs: Json!
  requests: Json!
}

input DataSourceCreateInput {
  id: String!
  name: String!
  outputs: [DataSourceOutput!]!
  requests: [DataSourceRequest!]!
}

type DataSourceGraphqlOutput {
  dataSource: DataSource
  error: KenchiError
}

scalar DataSourceOutput

scalar DataSourceRequest

input DataSourceUpdateInput {
  name: String
  outputs: [DataSourceOutput!]
  requests: [DataSourceRequest!]
}

type DatabaseMigration {
  id: String!
  runOn: DateTime
}

"""
A date-time string at UTC, such as 2007-12-03T10:15:30Z, compliant with the `date-time` format outlined in section 5.6 of the RFC 3339 profile of the ISO 8601 standard for representation of dates and times using the Gregorian calendar.
"""
scalar DateTime

type Domain implements Node {
  customPlacements: Json
  defaultOpen: Boolean
  defaultSide: String
  hosts: [String!]!
  id: ID!
  inject: Boolean
  injectHud: Boolean
  injectSidebar: Boolean
  insertTextXPath: String @deprecated(reason: "Use insertionPath")
  insertionPath: InsertionPath
  isGmail: Boolean
  name: String
  trackSession: Boolean
  variableExtractors: Json
}

type DomainConnection {
  """
  https://facebook.github.io/relay/graphql/connections.htm#sec-Edge-Types
  """
  edges: [DomainEdge!]!

  """
  https://facebook.github.io/relay/graphql/connections.htm#sec-undefined.PageInfo
  """
  pageInfo: PageInfo!
}

type DomainEdge {
  """https://facebook.github.io/relay/graphql/connections.htm#sec-Cursor"""
  cursor: String!

  """https://facebook.github.io/relay/graphql/connections.htm#sec-Node"""
  node: Domain!
}

type ExternalDataReference {
  id: ID!
  label: String!
  organization: Organization
  referenceId: String!
  referenceSource: String!
  referenceType: ExternalReferenceTypeEnum!
}

input ExternalDataReferenceCreateInput {
  label: String!
  referenceId: String!
  referenceSource: String!
  referenceType: ExternalReferenceTypeEnum!
}

type ExternalDataReferenceOutput {
  error: KenchiError
  externalDataReference: ExternalDataReference
}

input ExternalDataReferenceUpdateInput {
  label: String
  referenceId: String
  referenceSource: String
  referenceType: ExternalReferenceTypeEnum
}

enum ExternalReferenceTypeEnum {
  tag
}

type ExternalTag {
  id: String!
  intercomId: String
  label: String!
  organization: Organization!
}

input ExternalTagInput {
  intercomId: String
  label: String!
}

type ExternalTagOutput {
  error: KenchiError
  tag: ExternalTag
}

input GroupMemberInput {
  isManager: Boolean!
  userId: ID!
}

scalar InsertionPath

enum InsightsObjectGroupingEnum {
  collectionId
  staticId
}

type InsightsOutput {
  data: Json
  error: KenchiError
  latestData: DateTime
}

enum InsightsTypeEnum {
  ratings
  ratingsDetails
  toolUsage
  workflowUsage
}

scalar Json

type KenchiError {
  code: KenchiErrorCode!
  message: String
  param: String
  type: KenchiErrorType!
}

enum KenchiErrorCode {
  alreadyExists
  alreadyModified
  insufficientPermission
  invalidValue
  notFound
  unauthenticated
}

enum KenchiErrorType {
  authenticationError
  conflictError
  validationError
}

interface LatestNode {
  archiveReason: String
  branchId: String
  branchType: BranchTypeEnum!
  createdAt: DateTime!
  createdByUser: LimitedUser!
  hasActiveNotifications: Boolean
  id: ID!
  isArchived: Boolean!
  isFirst: Boolean!
  isLatest: Boolean!

  """
  A timestamp field only for use by useList that we use to compute when we last did a useList sync.
  """
  lastListFetch: DateTime!
  majorChangeDescription: SlateNodeArray
  settings: UserItemSettings
  shortcuts: [Shortcut!]
  staticId: String!
  subscribed: Boolean
  suggestedByUser: LimitedUser
  topUsage(
    """Returns the elements in the list that come after the specified cursor"""
    after: String
    endDate: String

    """Returns the first n elements from the list."""
    first: Int!
    startDate: String
  ): LatestNodeTopUsage_Connection!
}

type LatestNodeTopUsage_Connection {
  """
  https://facebook.github.io/relay/graphql/connections.htm#sec-Edge-Types
  """
  edges: [LatestNodeTopUsage_Edge!]!

  """
  https://facebook.github.io/relay/graphql/connections.htm#sec-undefined.PageInfo
  """
  pageInfo: PageInfo!
}

type LatestNodeTopUsage_Edge {
  count: Int!

  """https://facebook.github.io/relay/graphql/connections.htm#sec-Cursor"""
  cursor: String!

  """https://facebook.github.io/relay/graphql/connections.htm#sec-Node"""
  node: LimitedUser!
}

type LimitedCollection implements Node {
  description: String!
  icon: String
  id: ID!
  name: String!
  organization: Organization
}

type LimitedUser implements BaseUser & Node {
  disabledAt: DateTime
  email: String
  familyName: String
  givenName: String
  id: ID!
  name: String
  organization: Organization!
  picture: String
}

type Mutation {
  archiveCollection(id: ID!): CollectionOutput!
  archiveDataSource(id: ID!): DataSourceGraphqlOutput!
  archiveExternalDataReference(id: ID!): ExternalDataReferenceOutput!
  archiveExternalTag(id: ID!): ExternalTagOutput!
  archiveWidget(id: ID!): WidgetOutput!
  bulkUpdateTools(dryRun: Boolean!, filters: BulkUpdateFiltersInput!, migrationReason: String!, updates: BulkUpdateUpdatesInput!): BulkUpdateOutput!
  bulkUpdateWorkflows(dryRun: Boolean!, filters: BulkUpdateFiltersInput!, migrationReason: String!, updates: BulkUpdateUpdatesInput!): BulkUpdateOutput!
  createCollection(collectionData: CollectionInput!): CollectionOutput!
  createDataImport(initialData: Json!, type: DataImportTypeEnum!): DataImportOutput!
  createDataSource(data: DataSourceCreateInput!): DataSourceGraphqlOutput!
  createExternalDataReference(data: ExternalDataReferenceCreateInput!): ExternalDataReferenceOutput!
  createExternalTag(tagData: ExternalTagInput!): ExternalTagOutput!
  createGroup(name: String!, upsertMembers: [GroupMemberInput!]): UserGroupOutput!
  createOrganization: CreateOrganizationOutput!
  createSpace(spaceData: SpaceCreateInput!): SpaceOutput!
  createTool(toolData: ToolCreateInput!): ToolOutput!
  createUser(email: String!, groupIds: [ID!], isOrganizationAdmin: Boolean): UserOutput!
  createWidget(data: WidgetCreateInput!): WidgetOutput!
  createWorkflow(workflowData: WorkflowCreateInput!): WorkflowOutput!
  deleteTool(id: ID!): ToolOutput!
  deleteWorkflow(id: ID!): WorkflowOutput!
  disableUser(id: ID!): UserOutput!

  """Login or register via Google token"""
  login(token: String!): ViewerOutput!
  loginAs(sessionId: String): ViewerOutput!
  logout: ViewerOutput!
  markUserNotifications(staticId: String, types: [NotificationTypeEnum!], userNotificationIds: [ID!], viewed: Boolean!): UserNotificationOutput!
  mergeTool(fromId: ID!, toId: ID, toolData: ToolUpdateInput!): ToolOutput!
  mergeWorkflow(fromId: ID!, toId: ID, workflowData: WorkflowUpdateInput!): WorkflowOutput!
  notifyProductChange(id: ID!): Notification!
  queueBackfill(end: Int!, start: Int!): Boolean!
  queueConfigureSearchIndex: Boolean!
  queueReindexAll: Boolean!
  requeueUnprocessedLogs(day: DateTime!): Int!
  restoreTool(id: ID!): ToolOutput!
  restoreWorkflow(id: ID!): WorkflowOutput!
  sendPageSnapshot(snapshot: Json!): Boolean!
  sendToolRunLog(log: Json!, toolId: ID!): Boolean!
  sendUserFeedback(feedback: String!, path: String!, prompt: String!): Boolean!
  setShortcuts(orgShortcut: String, staticId: String!, userShortcut: String): SetShortcutsOutput!
  setUserDomainSettings(userDomainSettingsData: UserDomainSettingsInput!): UserDomainSettingsOutput
  setUserItemSettings(data: Json!, staticId: String!): UserItemSettingsOutput
  setupLoginAs(organizationId: ID, userId: ID): String!
  updateCollection(collectionData: CollectionInput!, id: ID!): CollectionOutput!
  updateDataImport(id: ID!, isComplete: Boolean!, state: Json): DataImportOutput!
  updateDataSource(data: DataSourceUpdateInput!, id: ID!): DataSourceGraphqlOutput!
  updateDemoAccount(from: DateTime!): Boolean!
  updateExternalDataReference(data: ExternalDataReferenceUpdateInput!, id: ID!): ExternalDataReferenceOutput!
  updateExternalTag(id: ID!, tagData: ExternalTagInput!): ExternalTagOutput!
  updateGroup(id: ID!, name: String!, removeMembers: [ID!], upsertMembers: [GroupMemberInput!]): UserGroupOutput!
  updateGroupMember(groupId: ID!, manager: Boolean, remove: Boolean!, userId: ID!): UserGroupOutput!
  updateOrganization(collectionsToShare: [ID!], intercomCode: String, name: String, useGoogleDomain: Boolean): OrganizationOutput!
  updateSpace(id: ID!, spaceData: SpaceUpdateInput!): SpaceOutput!
  updateSubscription(staticId: String!, subscribed: Boolean!): UserSubscriptionOutput!
  updateTool(id: ID!, toolData: ToolUpdateInput!): ToolOutput!
  updateUser(groupId: ID, groupIds: [ID!], id: ID!, isOrganizationAdmin: Boolean): UserOutput!
  updateUserSettings(wantsEditSuggestionEmails: Boolean): UserOutput!
  updateWidget(data: WidgetUpdateInput!, id: ID!): WidgetOutput!
  updateWorkflow(id: ID!, workflowData: WorkflowUpdateInput!): WorkflowOutput!
  upgradeDB: upgradeDBOutput!
  uploadFile(file: Upload, url: String): UploadFile!
}

interface Node {
  id: ID!
}

type Notification {
  createdAt: DateTime!
  id: ID!
  relatedNode: Node
  type: NotificationTypeEnum!
}

type NotificationStats {
  created: Int!
  dismissed: Int!
  viewed: Int!
}

enum NotificationTypeEnum {
  create_org_prompt
  new_user_welcome
  product_major_change
  tool_archived
  tool_created
  tool_major_change
  workflow_archived
  workflow_created
  workflow_major_change
}

type Organization implements Node {
  additionalGoogleDomains: [String!]!
  collections(
    """Returns the elements in the list that come after the specified cursor"""
    after: String

    """Returns the first n elements from the list."""
    first: Int!
  ): CollectionConnection!
  dataSources: [DataSource!]!
  defaultSpaceWidgets: Json
  defaultUserGroup: UserGroup @deprecated(reason: "Now a map, need to expose something new")
  disabledMessage: String
  domains(
    """Returns the elements in the list that come after the specified cursor"""
    after: String

    """Returns the first n elements from the list."""
    first: Int!
  ): DomainConnection!
  externalDataReferences(referenceSource: String!, referenceType: ExternalReferenceTypeEnum!): [ExternalDataReference!]!
  externalTags: [ExternalTag!]! @deprecated(reason: "Transition to externalDataReferences")
  googleDomain: String
  hasIntercomAccessToken: Boolean!
  id: ID!
  name: String
  shadowRecord: Boolean!
  shortcuts: [Shortcut!]!
  tools(
    """Returns the elements in the list that come after the specified cursor"""
    after: String

    """Returns the first n elements from the list."""
    first: Int!
    includeArchived: Boolean
    updatedSince: DateTime
  ): ToolLatestConnection!
  updatedAt: DateTime!
  userGroups(
    """Returns the elements in the list that come after the specified cursor"""
    after: String

    """Returns the first n elements from the list."""
    first: Int!
  ): UserGroupConnection!
  users(
    """Returns the elements in the list that come after the specified cursor"""
    after: String

    """Returns the first n elements from the list."""
    first: Int!
    includeDisabled: Boolean
  ): BaseUserConnection!
  workflows(
    """Returns the elements in the list that come after the specified cursor"""
    after: String

    """Returns the first n elements from the list."""
    first: Int!
    includeArchived: Boolean
    updatedSince: DateTime
  ): WorkflowLatestConnection!
}

type OrganizationConnection {
  """
  https://facebook.github.io/relay/graphql/connections.htm#sec-Edge-Types
  """
  edges: [OrganizationEdge!]!

  """
  https://facebook.github.io/relay/graphql/connections.htm#sec-undefined.PageInfo
  """
  pageInfo: PageInfo!
}

type OrganizationEdge {
  """https://facebook.github.io/relay/graphql/connections.htm#sec-Cursor"""
  cursor: String!

  """https://facebook.github.io/relay/graphql/connections.htm#sec-Node"""
  node: Organization!
}

type OrganizationOutput {
  error: KenchiError
  organization: Organization
}

"""
PageInfo cursor, as defined in https://facebook.github.io/relay/graphql/connections.htm#sec-undefined.PageInfo
"""
type PageInfo {
  """
  The cursor corresponding to the last nodes in edges. Null if the connection is empty.
  """
  endCursor: String

  """
  Used to indicate whether more edges exist following the set defined by the clients arguments.
  """
  hasNextPage: Boolean!

  """
  Used to indicate whether more edges exist prior to the set defined by the clients arguments.
  """
  hasPreviousPage: Boolean!

  """
  The cursor corresponding to the first nodes in edges. Null if the connection is empty.
  """
  startCursor: String
}

type PageSnapshot implements AdminNode {
  createdAt: DateTime!
  id: ID!
  snapshot: Json!
  user: User
}

type PageSnapshotConnection {
  """
  https://facebook.github.io/relay/graphql/connections.htm#sec-Edge-Types
  """
  edges: [PageSnapshotEdge!]!

  """
  https://facebook.github.io/relay/graphql/connections.htm#sec-undefined.PageInfo
  """
  pageInfo: PageInfo!
}

type PageSnapshotEdge {
  """https://facebook.github.io/relay/graphql/connections.htm#sec-Cursor"""
  cursor: String!

  """https://facebook.github.io/relay/graphql/connections.htm#sec-Node"""
  node: PageSnapshot!
}

type ProductChange implements Node {
  createdAt: DateTime!
  description: SlateNodeArray!
  id: ID!
  isMajor: Boolean!
  notification: Notification
  title: String!
}

type ProductChangeConnection {
  """
  https://facebook.github.io/relay/graphql/connections.htm#sec-Edge-Types
  """
  edges: [ProductChangeEdge!]!

  """
  https://facebook.github.io/relay/graphql/connections.htm#sec-undefined.PageInfo
  """
  pageInfo: PageInfo!
}

type ProductChangeEdge {
  """https://facebook.github.io/relay/graphql/connections.htm#sec-Cursor"""
  cursor: String!

  """https://facebook.github.io/relay/graphql/connections.htm#sec-Node"""
  node: ProductChange!
}

type Query {
  admin: Admin
  adminNode(id: ID!): AdminNode
  insights(collectionIds: [ID!], endDate: String, objectGrouping: InsightsObjectGroupingEnum, startDate: String, staticIds: [ID!], type: InsightsTypeEnum!): InsightsOutput!
  insightsRatingDetails(collectionIds: [ID!], endDate: String, startDate: String, staticIds: [ID!]): InsightsOutput!
  node(id: ID!): Node
  versionedNode(staticId: String!): LatestNode
  viewer: Viewer!
}

type SearchConfig {
  apiKey: String!
  apiKeyExpiration: DateTime!
  appId: String!
  indexName: String!
  lastUpdated: DateTime!
  shouldUseAlgolia: Boolean!
}

type SetShortcutsOutput {
  error: KenchiError
  orgShortcut: Shortcut
  userShortcut: Shortcut
}

type Shortcut {
  id: ID!
  latestNode: LatestNode
  orgWide: Boolean!
  organization: Organization
  shortcut: String
  staticId: String!
  user: LimitedUser
}

scalar SlateNodeArray

interface Space {
  acl: [SpaceAcl!]!
  archiveReason: String
  branchId: String
  branchType: BranchTypeEnum!
  branchVersions(
    """Returns the elements in the list that come after the specified cursor"""
    after: String

    """Returns the first n elements from the list."""
    first: Int!
    onlyMajor: Boolean
  ): SpaceRevisionConnection
  branchedFrom: SpaceRevision
  branches(
    """Returns the elements in the list that come after the specified cursor"""
    after: String
    branchType: BranchTypeEnum
    createdByMe: Boolean

    """Returns the first n elements from the list."""
    first: Int!
  ): SpaceLatestConnection!
  createdAt: DateTime!
  createdByUser: LimitedUser!
  hasActiveNotifications: Boolean
  id: ID!
  isArchived: Boolean!
  isFirst: Boolean!
  isLatest: Boolean!
  majorChangeDescription: SlateNodeArray
  name: String!
  previousVersion: SpaceRevision
  publishedVersions(
    """Returns the elements in the list that come after the specified cursor"""
    after: String

    """Returns the first n elements from the list."""
    first: Int!
    onlyMajor: Boolean
  ): SpaceRevisionConnection!
  settings: UserItemSettings
  shortcuts: [Shortcut!]
  staticId: String!
  subscribed: Boolean
  suggestedByUser: LimitedUser
  visibleToOrg: Boolean!
  widgets: Json!
}

type SpaceAcl {
  id: ID!
  staticId: String!
  user: LimitedUser
  userGroup: UserGroup
}

input SpaceCreateInput {
  name: String!
  visibleToGroupIds: [ID!]!
  visibleToOrg: Boolean!
  widgets: [Json!]!
}

type SpaceLatest implements LatestNode & Node & Space & VersionedNode {
  acl: [SpaceAcl!]!
  archiveReason: String
  branchId: String
  branchType: BranchTypeEnum!
  branchVersions(
    """Returns the elements in the list that come after the specified cursor"""
    after: String

    """Returns the first n elements from the list."""
    first: Int!
    onlyMajor: Boolean
  ): SpaceRevisionConnection
  branchedFrom: SpaceRevision
  branches(
    """Returns the elements in the list that come after the specified cursor"""
    after: String
    branchType: BranchTypeEnum
    createdByMe: Boolean

    """Returns the first n elements from the list."""
    first: Int!
  ): SpaceLatestConnection!
  createdAt: DateTime!
  createdByUser: LimitedUser!
  hasActiveNotifications: Boolean
  id: ID!
  isArchived: Boolean!
  isFirst: Boolean!
  isLatest: Boolean!

  """
  A timestamp field only for use by useList that we use to compute when we last did a useList sync.
  """
  lastListFetch: DateTime!
  majorChangeDescription: SlateNodeArray
  name: String!
  previousVersion: SpaceRevision
  publishedVersions(
    """Returns the elements in the list that come after the specified cursor"""
    after: String

    """Returns the first n elements from the list."""
    first: Int!
    onlyMajor: Boolean
  ): SpaceRevisionConnection!
  settings: UserItemSettings
  shortcuts: [Shortcut!]
  staticId: String!
  subscribed: Boolean
  suggestedByUser: LimitedUser
  topUsage(
    """Returns the elements in the list that come after the specified cursor"""
    after: String
    endDate: String

    """Returns the first n elements from the list."""
    first: Int!
    startDate: String
  ): LatestNodeTopUsage_Connection!
  visibleToOrg: Boolean!
  widgets: Json!
}

type SpaceLatestConnection {
  """
  https://facebook.github.io/relay/graphql/connections.htm#sec-Edge-Types
  """
  edges: [SpaceLatestEdge!]!

  """
  https://facebook.github.io/relay/graphql/connections.htm#sec-undefined.PageInfo
  """
  pageInfo: PageInfo!
}

type SpaceLatestEdge {
  """https://facebook.github.io/relay/graphql/connections.htm#sec-Cursor"""
  cursor: String!

  """https://facebook.github.io/relay/graphql/connections.htm#sec-Node"""
  node: SpaceLatest!
}

type SpaceOutput {
  error: KenchiError
  space: SpaceLatest
}

type SpaceRevision implements Node & Space & VersionedNode {
  acl: [SpaceAcl!]!
  archiveReason: String
  branchId: String
  branchType: BranchTypeEnum!
  branchVersions(
    """Returns the elements in the list that come after the specified cursor"""
    after: String

    """Returns the first n elements from the list."""
    first: Int!
    onlyMajor: Boolean
  ): SpaceRevisionConnection
  branchedFrom: SpaceRevision
  branches(
    """Returns the elements in the list that come after the specified cursor"""
    after: String
    branchType: BranchTypeEnum
    createdByMe: Boolean

    """Returns the first n elements from the list."""
    first: Int!
  ): SpaceLatestConnection!
  createdAt: DateTime!
  createdByUser: LimitedUser!
  hasActiveNotifications: Boolean
  id: ID!
  isArchived: Boolean!
  isFirst: Boolean!
  isLatest: Boolean!
  majorChangeDescription: SlateNodeArray
  name: String!
  previousVersion: SpaceRevision
  publishedVersions(
    """Returns the elements in the list that come after the specified cursor"""
    after: String

    """Returns the first n elements from the list."""
    first: Int!
    onlyMajor: Boolean
  ): SpaceRevisionConnection!
  settings: UserItemSettings
  shortcuts: [Shortcut!]
  staticId: String!
  subscribed: Boolean
  suggestedByUser: LimitedUser
  visibleToOrg: Boolean!
  widgets: Json!
}

type SpaceRevisionConnection {
  """
  https://facebook.github.io/relay/graphql/connections.htm#sec-Edge-Types
  """
  edges: [SpaceRevisionEdge!]!

  """
  https://facebook.github.io/relay/graphql/connections.htm#sec-undefined.PageInfo
  """
  pageInfo: PageInfo!
}

type SpaceRevisionEdge {
  """https://facebook.github.io/relay/graphql/connections.htm#sec-Cursor"""
  cursor: String!

  """https://facebook.github.io/relay/graphql/connections.htm#sec-Node"""
  node: SpaceRevision!
}

input SpaceUpdateInput {
  name: String
  visibleToGroupIds: [ID!]
  visibleToOrg: Boolean
  widgets: [Json!]
}

interface Tool {
  archiveReason: String
  branchId: String
  branchType: BranchTypeEnum!
  branchVersions(
    """Returns the elements in the list that come after the specified cursor"""
    after: String

    """Returns the first n elements from the list."""
    first: Int!
    onlyMajor: Boolean
  ): ToolRevisionConnection
  branchedFrom: ToolRevision
  branches(
    """Returns the elements in the list that come after the specified cursor"""
    after: String
    branchType: BranchTypeEnum
    createdByMe: Boolean

    """Returns the first n elements from the list."""
    first: Int!
  ): ToolLatestConnection!
  collection: Collection!

  """Collections where this tool is used"""
  collections(
    """Returns the elements in the list that come after the specified cursor"""
    after: String

    """Returns the first n elements from the list."""
    first: Int!
  ): CollectionConnection!
  component: String!
  configuration: ToolConfiguration!
  createdAt: DateTime!
  createdByUser: LimitedUser!
  description: String!
  hasActiveNotifications: Boolean
  icon: String
  id: ID!
  inputs: [ToolInput!]!
  isArchived: Boolean!
  isFirst: Boolean!
  isLatest: Boolean!
  keywords: [String!]!
  majorChangeDescription: SlateNodeArray
  name: String!
  previousVersion: ToolRevision
  publishedVersions(
    """Returns the elements in the list that come after the specified cursor"""
    after: String

    """Returns the first n elements from the list."""
    first: Int!
    onlyMajor: Boolean
  ): ToolRevisionConnection!
  settings: UserItemSettings
  shortcuts: [Shortcut!]
  staticId: String!
  subscribed: Boolean
  suggestedByUser: LimitedUser
  workflows(
    """Returns the elements in the list that come after the specified cursor"""
    after: String

    """Returns the first n elements from the list."""
    first: Int!
  ): WorkflowLatestConnection!
}

scalar ToolConfiguration

input ToolCreateInput {
  branchType: BranchTypeEnum!
  collectionId: String!
  component: String!
  configuration: ToolConfiguration!
  description: String!
  icon: String
  inputs: [ToolInput!]!
  keywords: [String!]!
  majorChangeDescription: SlateNodeArray
  name: String!
}

scalar ToolInput

type ToolLatest implements LatestNode & Node & Tool & VersionedNode {
  archiveReason: String
  branchId: String
  branchType: BranchTypeEnum!
  branchVersions(
    """Returns the elements in the list that come after the specified cursor"""
    after: String

    """Returns the first n elements from the list."""
    first: Int!
    onlyMajor: Boolean
  ): ToolRevisionConnection
  branchedFrom: ToolRevision
  branches(
    """Returns the elements in the list that come after the specified cursor"""
    after: String
    branchType: BranchTypeEnum
    createdByMe: Boolean

    """Returns the first n elements from the list."""
    first: Int!
  ): ToolLatestConnection!
  collection: Collection!

  """Collections where this tool is used"""
  collections(
    """Returns the elements in the list that come after the specified cursor"""
    after: String

    """Returns the first n elements from the list."""
    first: Int!
  ): CollectionConnection!
  component: String!
  configuration: ToolConfiguration!
  createdAt: DateTime!
  createdByUser: LimitedUser!
  description: String!
  hasActiveNotifications: Boolean
  icon: String
  id: ID!
  inputs: [ToolInput!]!
  isArchived: Boolean!
  isFirst: Boolean!
  isLatest: Boolean!
  keywords: [String!]!

  """
  A timestamp field only for use by useList that we use to compute when we last did a useList sync.
  """
  lastListFetch: DateTime!
  majorChangeDescription: SlateNodeArray
  name: String!
  previousVersion: ToolRevision
  publishedVersions(
    """Returns the elements in the list that come after the specified cursor"""
    after: String

    """Returns the first n elements from the list."""
    first: Int!
    onlyMajor: Boolean
  ): ToolRevisionConnection!
  settings: UserItemSettings
  shortcuts: [Shortcut!]
  staticId: String!
  subscribed: Boolean
  suggestedByUser: LimitedUser
  topUsage(
    """Returns the elements in the list that come after the specified cursor"""
    after: String
    endDate: String

    """Returns the first n elements from the list."""
    first: Int!
    startDate: String
  ): LatestNodeTopUsage_Connection!
  workflows(
    """Returns the elements in the list that come after the specified cursor"""
    after: String

    """Returns the first n elements from the list."""
    first: Int!
  ): WorkflowLatestConnection!
}

type ToolLatestConnection {
  """
  https://facebook.github.io/relay/graphql/connections.htm#sec-Edge-Types
  """
  edges: [ToolLatestEdge!]!

  """
  https://facebook.github.io/relay/graphql/connections.htm#sec-undefined.PageInfo
  """
  pageInfo: PageInfo!
}

type ToolLatestEdge {
  """https://facebook.github.io/relay/graphql/connections.htm#sec-Cursor"""
  cursor: String!

  """https://facebook.github.io/relay/graphql/connections.htm#sec-Node"""
  node: ToolLatest!
}

type ToolOutput {
  error: KenchiError
  tool: ToolLatest
}

type ToolRevision implements Node & Tool & VersionedNode {
  archiveReason: String
  branchId: String
  branchType: BranchTypeEnum!
  branchVersions(
    """Returns the elements in the list that come after the specified cursor"""
    after: String

    """Returns the first n elements from the list."""
    first: Int!
    onlyMajor: Boolean
  ): ToolRevisionConnection
  branchedFrom: ToolRevision
  branches(
    """Returns the elements in the list that come after the specified cursor"""
    after: String
    branchType: BranchTypeEnum
    createdByMe: Boolean

    """Returns the first n elements from the list."""
    first: Int!
  ): ToolLatestConnection!
  collection: Collection!

  """Collections where this tool is used"""
  collections(
    """Returns the elements in the list that come after the specified cursor"""
    after: String

    """Returns the first n elements from the list."""
    first: Int!
  ): CollectionConnection!
  component: String!
  configuration: ToolConfiguration!
  createdAt: DateTime!
  createdByUser: LimitedUser!
  description: String!
  hasActiveNotifications: Boolean
  icon: String
  id: ID!
  inputs: [ToolInput!]!
  isArchived: Boolean!
  isFirst: Boolean!
  isLatest: Boolean!
  keywords: [String!]!
  majorChangeDescription: SlateNodeArray
  name: String!
  previousVersion: ToolRevision
  publishedVersions(
    """Returns the elements in the list that come after the specified cursor"""
    after: String

    """Returns the first n elements from the list."""
    first: Int!
    onlyMajor: Boolean
  ): ToolRevisionConnection!
  settings: UserItemSettings
  shortcuts: [Shortcut!]
  staticId: String!
  subscribed: Boolean
  suggestedByUser: LimitedUser
  workflows(
    """Returns the elements in the list that come after the specified cursor"""
    after: String

    """Returns the first n elements from the list."""
    first: Int!
  ): WorkflowLatestConnection!
}

type ToolRevisionConnection {
  """
  https://facebook.github.io/relay/graphql/connections.htm#sec-Edge-Types
  """
  edges: [ToolRevisionEdge!]!

  """
  https://facebook.github.io/relay/graphql/connections.htm#sec-undefined.PageInfo
  """
  pageInfo: PageInfo!
}

type ToolRevisionEdge {
  """https://facebook.github.io/relay/graphql/connections.htm#sec-Cursor"""
  cursor: String!

  """https://facebook.github.io/relay/graphql/connections.htm#sec-Node"""
  node: ToolRevision!
}

type ToolRunLog implements AdminNode {
  createdAt: DateTime!
  id: ID!
  log: Json!
  tool: ToolRevision
  user: User
}

type ToolRunLogConnection {
  """
  https://facebook.github.io/relay/graphql/connections.htm#sec-Edge-Types
  """
  edges: [ToolRunLogEdge!]!

  """
  https://facebook.github.io/relay/graphql/connections.htm#sec-undefined.PageInfo
  """
  pageInfo: PageInfo!
}

type ToolRunLogEdge {
  """https://facebook.github.io/relay/graphql/connections.htm#sec-Cursor"""
  cursor: String!

  """https://facebook.github.io/relay/graphql/connections.htm#sec-Node"""
  node: ToolRunLog!
}

input ToolUpdateInput {
  branchType: BranchTypeEnum
  collectionId: String
  component: String
  configuration: ToolConfiguration
  description: String
  icon: String
  inputs: [ToolInput!]
  keywords: [String!]
  majorChangeDescription: SlateNodeArray
  name: String
}

type UnprocessedLog {
  count: Int!
  day: DateTime!
}

"""The `Upload` scalar type represents a file upload."""
scalar Upload

type UploadFile {
  error: KenchiError
  url: String
}

type User implements BaseUser & Node {
  collections(
    """Returns the elements in the list that come after the specified cursor"""
    after: String

    """Returns the first n elements from the list."""
    first: Int!
  ): CollectionConnection!
  disabledAt: DateTime
  domainSettings(
    """Returns the elements in the list that come after the specified cursor"""
    after: String

    """Returns the first n elements from the list."""
    first: Int!
  ): UserDomainSettingsConnection!
  draftTools(
    """Returns the elements in the list that come after the specified cursor"""
    after: String

    """Returns the first n elements from the list."""
    first: Int!
  ): ToolLatestConnection!
  draftWorkflows(
    """Returns the elements in the list that come after the specified cursor"""
    after: String

    """Returns the first n elements from the list."""
    first: Int!
  ): WorkflowLatestConnection!
  email: String
  familyName: String
  givenName: String
  groups: [UserGroup!]!
  hasTool: Boolean!
  hasWorkflow: Boolean!
  id: ID!
  magicItemSettings(
    """Returns the elements in the list that come after the specified cursor"""
    after: String

    """Returns the first n elements from the list."""
    first: Int!
  ): UserItemSettingsConnection!
  majorToolChanges(
    """Returns the elements in the list that come after the specified cursor"""
    after: String

    """Returns the first n elements from the list."""
    first: Int!
  ): ToolRevisionConnection!
  majorWorkflowChanges(
    """Returns the elements in the list that come after the specified cursor"""
    after: String

    """Returns the first n elements from the list."""
    first: Int!
  ): WorkflowRevisionConnection!
  name: String
  notifications(
    active: Boolean

    """Returns the elements in the list that come after the specified cursor"""
    after: String

    """Returns the first n elements from the list."""
    first: Int!
    staticId: String
  ): UserNotificationConnection!
  organization: Organization!
  organizationPermissions: [String!]!
  picture: String
  potentialGoogleDomain: String
  shortcuts: [Shortcut!]!
  spaces(
    """Returns the elements in the list that come after the specified cursor"""
    after: String

    """Returns the first n elements from the list."""
    first: Int!
  ): SpaceLatestConnection!
  topUsedToolStaticIds: [String!]!
  topUsedTools(
    """Returns the elements in the list that come after the specified cursor"""
    after: String

    """Returns the first n elements from the list."""
    first: Int!
  ): ToolLatestConnection!
  topViewedWorkflowStaticIds: [String!]!
  wantsEditSuggestionEmails: Boolean!
}

type UserConnection {
  """
  https://facebook.github.io/relay/graphql/connections.htm#sec-Edge-Types
  """
  edges: [UserEdge!]!

  """
  https://facebook.github.io/relay/graphql/connections.htm#sec-undefined.PageInfo
  """
  pageInfo: PageInfo!
}

type UserDomainSettings implements Node {
  domain: Domain!
  id: ID!
  injectHud: Boolean
  open: Boolean
  side: String
}

type UserDomainSettingsConnection {
  """
  https://facebook.github.io/relay/graphql/connections.htm#sec-Edge-Types
  """
  edges: [UserDomainSettingsEdge!]!

  """
  https://facebook.github.io/relay/graphql/connections.htm#sec-undefined.PageInfo
  """
  pageInfo: PageInfo!
}

type UserDomainSettingsEdge {
  """https://facebook.github.io/relay/graphql/connections.htm#sec-Cursor"""
  cursor: String!

  """https://facebook.github.io/relay/graphql/connections.htm#sec-Node"""
  node: UserDomainSettings!
}

input UserDomainSettingsInput {
  host: String!
  open: Boolean
  side: String
}

type UserDomainSettingsOutput {
  userDomainSettings: UserDomainSettings!
}

type UserEdge {
  """https://facebook.github.io/relay/graphql/connections.htm#sec-Cursor"""
  cursor: String!

  """https://facebook.github.io/relay/graphql/connections.htm#sec-Node"""
  node: User!
}

type UserGroup implements Node {
  id: ID!
  isManager: Boolean
  members(
    """Returns the elements in the list that come after the specified cursor"""
    after: String

    """Returns the first n elements from the list."""
    first: Int!
  ): UserGroupMembers_Connection!
  name: String!
  organization: Organization!
}

type UserGroupConnection {
  """
  https://facebook.github.io/relay/graphql/connections.htm#sec-Edge-Types
  """
  edges: [UserGroupEdge!]!

  """
  https://facebook.github.io/relay/graphql/connections.htm#sec-undefined.PageInfo
  """
  pageInfo: PageInfo!
}

type UserGroupEdge {
  """https://facebook.github.io/relay/graphql/connections.htm#sec-Cursor"""
  cursor: String!

  """https://facebook.github.io/relay/graphql/connections.htm#sec-Node"""
  node: UserGroup!
}

type UserGroupMembers_Connection {
  """
  https://facebook.github.io/relay/graphql/connections.htm#sec-Edge-Types
  """
  edges: [UserGroupMembers_Edge!]!

  """
  https://facebook.github.io/relay/graphql/connections.htm#sec-undefined.PageInfo
  """
  pageInfo: PageInfo!
}

type UserGroupMembers_Edge {
  """https://facebook.github.io/relay/graphql/connections.htm#sec-Cursor"""
  cursor: String!
  isManager: Boolean!

  """https://facebook.github.io/relay/graphql/connections.htm#sec-Node"""
  node: BaseUser!
}

type UserGroupOutput {
  error: KenchiError
  group: UserGroup
}

type UserItemSettings {
  data: Json!
  staticId: String!
}

type UserItemSettingsConnection {
  """
  https://facebook.github.io/relay/graphql/connections.htm#sec-Edge-Types
  """
  edges: [UserItemSettingsEdge!]!

  """
  https://facebook.github.io/relay/graphql/connections.htm#sec-undefined.PageInfo
  """
  pageInfo: PageInfo!
}

type UserItemSettingsEdge {
  """https://facebook.github.io/relay/graphql/connections.htm#sec-Cursor"""
  cursor: String!

  """https://facebook.github.io/relay/graphql/connections.htm#sec-Node"""
  node: UserItemSettings!
}

type UserItemSettingsOutput {
  error: KenchiError
  userItemSettings: UserItemSettings
}

type UserNotification {
  createdAt: DateTime!
  dismissedAt: DateTime
  id: ID!
  notification: Notification!
  viewedAt: DateTime
}

type UserNotificationConnection {
  """
  https://facebook.github.io/relay/graphql/connections.htm#sec-Edge-Types
  """
  edges: [UserNotificationEdge!]!

  """
  https://facebook.github.io/relay/graphql/connections.htm#sec-undefined.PageInfo
  """
  pageInfo: PageInfo!
}

type UserNotificationEdge {
  """https://facebook.github.io/relay/graphql/connections.htm#sec-Cursor"""
  cursor: String!

  """https://facebook.github.io/relay/graphql/connections.htm#sec-Node"""
  node: UserNotification!
}

type UserNotificationOutput {
  error: KenchiError
  userNotifications: [UserNotification!]
}

type UserOutput {
  error: KenchiError
  user: User
}

type UserSubscriptionOutput {
  error: KenchiError
  versionedNode: VersionedNode
}

interface VersionedNode {
  archiveReason: String
  branchId: String
  branchType: BranchTypeEnum!
  createdAt: DateTime!
  createdByUser: LimitedUser!
  hasActiveNotifications: Boolean
  id: ID!
  isArchived: Boolean!
  isFirst: Boolean!
  isLatest: Boolean!
  majorChangeDescription: SlateNodeArray
  settings: UserItemSettings
  shortcuts: [Shortcut!]
  staticId: String!
  subscribed: Boolean
  suggestedByUser: LimitedUser
}

type Viewer {
  csrfToken: String!
  defaultDomains(
    """Returns the elements in the list that come after the specified cursor"""
    after: String

    """Returns the first n elements from the list."""
    first: Int!
  ): DomainConnection!
  installUrl(previousVersion: String, reason: String, version: String): String
  organization: Organization
  productChanges(
    """Returns the elements in the list that come after the specified cursor"""
    after: String

    """Returns the first n elements from the list."""
    first: Int!
  ): ProductChangeConnection!
  searchConfig: SearchConfig
  session: AuthSession
  trigger500: Boolean! @deprecated(reason: "Duh")
  triggerAsync500: Boolean! @deprecated(reason: "Duh")
  uninstallUrl(version: String): String
  user: User
}

type ViewerOutput {
  error: KenchiError
  viewer: Viewer!
}

interface Widget {
  archiveReason: String
  branchId: String
  branchType: BranchTypeEnum!
  branchVersions(
    """Returns the elements in the list that come after the specified cursor"""
    after: String

    """Returns the first n elements from the list."""
    first: Int!
    onlyMajor: Boolean
  ): WidgetRevisionConnection
  branchedFrom: WidgetRevision
  branches(
    """Returns the elements in the list that come after the specified cursor"""
    after: String
    branchType: BranchTypeEnum
    createdByMe: Boolean

    """Returns the first n elements from the list."""
    first: Int!
  ): WidgetLatestConnection!
  contents: Json!
  createdAt: DateTime!
  createdByUser: LimitedUser!
  hasActiveNotifications: Boolean
  id: ID!
  inputs: Json!
  isArchived: Boolean!
  isFirst: Boolean!
  isLatest: Boolean!
  majorChangeDescription: SlateNodeArray
  previousVersion: WidgetRevision
  publishedVersions(
    """Returns the elements in the list that come after the specified cursor"""
    after: String

    """Returns the first n elements from the list."""
    first: Int!
    onlyMajor: Boolean
  ): WidgetRevisionConnection!
  settings: UserItemSettings
  shortcuts: [Shortcut!]
  staticId: String!
  subscribed: Boolean
  suggestedByUser: LimitedUser
}

input WidgetCreateInput {
  contents: SlateNodeArray!
  inputs: [WidgetInput!]
}

scalar WidgetInput

type WidgetLatest implements LatestNode & Node & VersionedNode & Widget {
  archiveReason: String
  branchId: String
  branchType: BranchTypeEnum!
  branchVersions(
    """Returns the elements in the list that come after the specified cursor"""
    after: String

    """Returns the first n elements from the list."""
    first: Int!
    onlyMajor: Boolean
  ): WidgetRevisionConnection
  branchedFrom: WidgetRevision
  branches(
    """Returns the elements in the list that come after the specified cursor"""
    after: String
    branchType: BranchTypeEnum
    createdByMe: Boolean

    """Returns the first n elements from the list."""
    first: Int!
  ): WidgetLatestConnection!
  contents: Json!
  createdAt: DateTime!
  createdByUser: LimitedUser!
  hasActiveNotifications: Boolean
  id: ID!
  inputs: Json!
  isArchived: Boolean!
  isFirst: Boolean!
  isLatest: Boolean!

  """
  A timestamp field only for use by useList that we use to compute when we last did a useList sync.
  """
  lastListFetch: DateTime!
  majorChangeDescription: SlateNodeArray
  previousVersion: WidgetRevision
  publishedVersions(
    """Returns the elements in the list that come after the specified cursor"""
    after: String

    """Returns the first n elements from the list."""
    first: Int!
    onlyMajor: Boolean
  ): WidgetRevisionConnection!
  settings: UserItemSettings
  shortcuts: [Shortcut!]
  staticId: String!
  subscribed: Boolean
  suggestedByUser: LimitedUser
  topUsage(
    """Returns the elements in the list that come after the specified cursor"""
    after: String
    endDate: String

    """Returns the first n elements from the list."""
    first: Int!
    startDate: String
  ): LatestNodeTopUsage_Connection!
}

type WidgetLatestConnection {
  """
  https://facebook.github.io/relay/graphql/connections.htm#sec-Edge-Types
  """
  edges: [WidgetLatestEdge!]!

  """
  https://facebook.github.io/relay/graphql/connections.htm#sec-undefined.PageInfo
  """
  pageInfo: PageInfo!
}

type WidgetLatestEdge {
  """https://facebook.github.io/relay/graphql/connections.htm#sec-Cursor"""
  cursor: String!

  """https://facebook.github.io/relay/graphql/connections.htm#sec-Node"""
  node: WidgetLatest!
}

type WidgetOutput {
  error: KenchiError
  widget: WidgetLatest
}

type WidgetRevision implements Node & VersionedNode & Widget {
  archiveReason: String
  branchId: String
  branchType: BranchTypeEnum!
  branchVersions(
    """Returns the elements in the list that come after the specified cursor"""
    after: String

    """Returns the first n elements from the list."""
    first: Int!
    onlyMajor: Boolean
  ): WidgetRevisionConnection
  branchedFrom: WidgetRevision
  branches(
    """Returns the elements in the list that come after the specified cursor"""
    after: String
    branchType: BranchTypeEnum
    createdByMe: Boolean

    """Returns the first n elements from the list."""
    first: Int!
  ): WidgetLatestConnection!
  contents: Json!
  createdAt: DateTime!
  createdByUser: LimitedUser!
  hasActiveNotifications: Boolean
  id: ID!
  inputs: Json!
  isArchived: Boolean!
  isFirst: Boolean!
  isLatest: Boolean!
  majorChangeDescription: SlateNodeArray
  previousVersion: WidgetRevision
  publishedVersions(
    """Returns the elements in the list that come after the specified cursor"""
    after: String

    """Returns the first n elements from the list."""
    first: Int!
    onlyMajor: Boolean
  ): WidgetRevisionConnection!
  settings: UserItemSettings
  shortcuts: [Shortcut!]
  staticId: String!
  subscribed: Boolean
  suggestedByUser: LimitedUser
}

type WidgetRevisionConnection {
  """
  https://facebook.github.io/relay/graphql/connections.htm#sec-Edge-Types
  """
  edges: [WidgetRevisionEdge!]!

  """
  https://facebook.github.io/relay/graphql/connections.htm#sec-undefined.PageInfo
  """
  pageInfo: PageInfo!
}

type WidgetRevisionEdge {
  """https://facebook.github.io/relay/graphql/connections.htm#sec-Cursor"""
  cursor: String!

  """https://facebook.github.io/relay/graphql/connections.htm#sec-Node"""
  node: WidgetRevision!
}

input WidgetUpdateInput {
  contents: Json
  inputs: [WidgetInput!]
}

interface Workflow {
  archiveReason: String
  branchId: String
  branchType: BranchTypeEnum!
  branchVersions(
    """Returns the elements in the list that come after the specified cursor"""
    after: String

    """Returns the first n elements from the list."""
    first: Int!
    onlyMajor: Boolean
  ): WorkflowRevisionConnection
  branchedFrom: WorkflowRevision
  branches(
    """Returns the elements in the list that come after the specified cursor"""
    after: String
    branchType: BranchTypeEnum
    createdByMe: Boolean

    """Returns the first n elements from the list."""
    first: Int!
  ): WorkflowLatestConnection!
  collection: Collection!
  contents: SlateNodeArray!
  createdAt: DateTime!
  createdByUser: LimitedUser!
  description: String!
  embeddedInWorkflows(
    """Returns the elements in the list that come after the specified cursor"""
    after: String

    """Returns the first n elements from the list."""
    first: Int!
  ): WorkflowLatestConnection!
  embedsWorkflows(
    """Returns the elements in the list that come after the specified cursor"""
    after: String

    """Returns the first n elements from the list."""
    first: Int!
  ): WorkflowLatestConnection!
  hasActiveNotifications: Boolean
  icon: String
  id: ID!
  isArchived: Boolean!
  isFirst: Boolean!
  isLatest: Boolean!
  keywords: [String!]!
  linksFromWorkflows(
    """Returns the elements in the list that come after the specified cursor"""
    after: String

    """Returns the first n elements from the list."""
    first: Int!
  ): WorkflowLatestConnection!
  linksToWorkflows(
    """Returns the elements in the list that come after the specified cursor"""
    after: String

    """Returns the first n elements from the list."""
    first: Int!
  ): WorkflowLatestConnection!
  majorChangeDescription: SlateNodeArray
  name: String!
  previousVersion: WorkflowRevision
  publishedVersions(
    """Returns the elements in the list that come after the specified cursor"""
    after: String

    """Returns the first n elements from the list."""
    first: Int!
    onlyMajor: Boolean
  ): WorkflowRevisionConnection!
  settings: UserItemSettings
  shortcuts: [Shortcut!]
  staticId: String!
  subscribed: Boolean
  suggestedByUser: LimitedUser
  tools(
    """Returns the elements in the list that come after the specified cursor"""
    after: String

    """Returns the first n elements from the list."""
    first: Int!
  ): ToolLatestConnection!
}

input WorkflowCreateInput {
  branchType: BranchTypeEnum!
  collectionId: String!
  contents: SlateNodeArray!
  description: String!
  icon: String
  keywords: [String!]!
  majorChangeDescription: SlateNodeArray
  name: String!
}

type WorkflowLatest implements LatestNode & Node & VersionedNode & Workflow {
  archiveReason: String
  branchId: String
  branchType: BranchTypeEnum!
  branchVersions(
    """Returns the elements in the list that come after the specified cursor"""
    after: String

    """Returns the first n elements from the list."""
    first: Int!
    onlyMajor: Boolean
  ): WorkflowRevisionConnection
  branchedFrom: WorkflowRevision
  branches(
    """Returns the elements in the list that come after the specified cursor"""
    after: String
    branchType: BranchTypeEnum
    createdByMe: Boolean

    """Returns the first n elements from the list."""
    first: Int!
  ): WorkflowLatestConnection!
  collection: Collection!
  contents: SlateNodeArray!
  createdAt: DateTime!
  createdByUser: LimitedUser!
  description: String!
  embeddedInWorkflows(
    """Returns the elements in the list that come after the specified cursor"""
    after: String

    """Returns the first n elements from the list."""
    first: Int!
  ): WorkflowLatestConnection!
  embedsWorkflows(
    """Returns the elements in the list that come after the specified cursor"""
    after: String

    """Returns the first n elements from the list."""
    first: Int!
  ): WorkflowLatestConnection!
  hasActiveNotifications: Boolean
  icon: String
  id: ID!
  isArchived: Boolean!
  isFirst: Boolean!
  isLatest: Boolean!
  keywords: [String!]!

  """
  A timestamp field only for use by useList that we use to compute when we last did a useList sync.
  """
  lastListFetch: DateTime!
  linksFromWorkflows(
    """Returns the elements in the list that come after the specified cursor"""
    after: String

    """Returns the first n elements from the list."""
    first: Int!
  ): WorkflowLatestConnection!
  linksToWorkflows(
    """Returns the elements in the list that come after the specified cursor"""
    after: String

    """Returns the first n elements from the list."""
    first: Int!
  ): WorkflowLatestConnection!
  majorChangeDescription: SlateNodeArray
  name: String!
  previousVersion: WorkflowRevision
  publishedVersions(
    """Returns the elements in the list that come after the specified cursor"""
    after: String

    """Returns the first n elements from the list."""
    first: Int!
    onlyMajor: Boolean
  ): WorkflowRevisionConnection!
  settings: UserItemSettings
  shortcuts: [Shortcut!]
  staticId: String!
  subscribed: Boolean
  suggestedByUser: LimitedUser
  tools(
    """Returns the elements in the list that come after the specified cursor"""
    after: String

    """Returns the first n elements from the list."""
    first: Int!
  ): ToolLatestConnection!
  topUsage(
    """Returns the elements in the list that come after the specified cursor"""
    after: String
    endDate: String

    """Returns the first n elements from the list."""
    first: Int!
    startDate: String
  ): LatestNodeTopUsage_Connection!
}

type WorkflowLatestConnection {
  """
  https://facebook.github.io/relay/graphql/connections.htm#sec-Edge-Types
  """
  edges: [WorkflowLatestEdge!]!

  """
  https://facebook.github.io/relay/graphql/connections.htm#sec-undefined.PageInfo
  """
  pageInfo: PageInfo!
}

type WorkflowLatestEdge {
  """https://facebook.github.io/relay/graphql/connections.htm#sec-Cursor"""
  cursor: String!

  """https://facebook.github.io/relay/graphql/connections.htm#sec-Node"""
  node: WorkflowLatest!
}

type WorkflowOutput {
  error: KenchiError
  workflow: WorkflowLatest
}

type WorkflowRevision implements Node & VersionedNode & Workflow {
  archiveReason: String
  branchId: String
  branchType: BranchTypeEnum!
  branchVersions(
    """Returns the elements in the list that come after the specified cursor"""
    after: String

    """Returns the first n elements from the list."""
    first: Int!
    onlyMajor: Boolean
  ): WorkflowRevisionConnection
  branchedFrom: WorkflowRevision
  branches(
    """Returns the elements in the list that come after the specified cursor"""
    after: String
    branchType: BranchTypeEnum
    createdByMe: Boolean

    """Returns the first n elements from the list."""
    first: Int!
  ): WorkflowLatestConnection!
  collection: Collection!
  contents: SlateNodeArray!
  createdAt: DateTime!
  createdByUser: LimitedUser!
  description: String!
  embeddedInWorkflows(
    """Returns the elements in the list that come after the specified cursor"""
    after: String

    """Returns the first n elements from the list."""
    first: Int!
  ): WorkflowLatestConnection!
  embedsWorkflows(
    """Returns the elements in the list that come after the specified cursor"""
    after: String

    """Returns the first n elements from the list."""
    first: Int!
  ): WorkflowLatestConnection!
  hasActiveNotifications: Boolean
  icon: String
  id: ID!
  isArchived: Boolean!
  isFirst: Boolean!
  isLatest: Boolean!
  keywords: [String!]!
  linksFromWorkflows(
    """Returns the elements in the list that come after the specified cursor"""
    after: String

    """Returns the first n elements from the list."""
    first: Int!
  ): WorkflowLatestConnection!
  linksToWorkflows(
    """Returns the elements in the list that come after the specified cursor"""
    after: String

    """Returns the first n elements from the list."""
    first: Int!
  ): WorkflowLatestConnection!
  majorChangeDescription: SlateNodeArray
  name: String!
  previousVersion: WorkflowRevision
  publishedVersions(
    """Returns the elements in the list that come after the specified cursor"""
    after: String

    """Returns the first n elements from the list."""
    first: Int!
    onlyMajor: Boolean
  ): WorkflowRevisionConnection!
  settings: UserItemSettings
  shortcuts: [Shortcut!]
  staticId: String!
  subscribed: Boolean
  suggestedByUser: LimitedUser
  tools(
    """Returns the elements in the list that come after the specified cursor"""
    after: String

    """Returns the first n elements from the list."""
    first: Int!
  ): ToolLatestConnection!
}

type WorkflowRevisionConnection {
  """
  https://facebook.github.io/relay/graphql/connections.htm#sec-Edge-Types
  """
  edges: [WorkflowRevisionEdge!]!

  """
  https://facebook.github.io/relay/graphql/connections.htm#sec-undefined.PageInfo
  """
  pageInfo: PageInfo!
}

type WorkflowRevisionEdge {
  """https://facebook.github.io/relay/graphql/connections.htm#sec-Cursor"""
  cursor: String!

  """https://facebook.github.io/relay/graphql/connections.htm#sec-Node"""
  node: WorkflowRevision!
}

input WorkflowUpdateInput {
  branchType: BranchTypeEnum
  collectionId: String
  contents: SlateNodeArray
  description: String
  icon: String
  keywords: [String!]
  majorChangeDescription: SlateNodeArray
  name: String
}

type upgradeDBOutput {
  stderr: String!
  stdout: String!
}
